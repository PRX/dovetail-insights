<%#
# This constructs a table for all the various permutations of dimension
# analysis results, which supports 0, 1 or 2 groups and 1 or more metrics.
#
# A 2-group result with 2+ metrics utilizes all possible components of the
# table. With fewer groups or fewer metrics, some parts of the table are not
# included, as they become unnecessary.
#
# See the +<table>+ below for details about each table row, and see the
# associated partials for more details about the specific contents of each row.
#
# The general structure of any given row is:
# 1. A row header cell indicating the group 1 member
# 2. Cells with the totals for that member for each metric
# 3. Cells for each group 2 member, for each metric, with the value
# 4. Cells for each metric where group 2 is NULL
%>

<%
  @group_1_unique_members = @composition.results.group_1_unique_members
  @group_2_unique_members = @composition.results.group_2_unique_members

  # Show full table structure by default
  @tbl_show_metric_headers = true
  @tbl_show_metric_totals = true
  @tbl_show_group_1_headers = true
  @tbl_show_group_1_totals = true
  @tbl_show_group_1_unknowns = true
  @tbl_show_group_2_headers = true
  @tbl_show_group_2_totals = true
  @tbl_show_group_2_unknowns = true

  ##
  # Turn things off for certain permutations of groups and metrics.

  # If less than 2 metrics are selected, don't show the headers. Except if no
  # groups are selected; in that case always show metrics headers since they
  # will be the only headers
  @tbl_show_metric_headers = false if @composition.groups.size > 0 && @composition.metrics.size <= 1

  # Hide group 2 headers when there is no group 2
  @tbl_show_group_2_headers = false if @composition.groups.size < 2

  # When no groups are selected, the values are the totals so there's no need
  # to show separate totals
  @tbl_show_metric_totals = false if @composition.groups.size == 0

  # Hide group 2 total when there's no group 2
  @tbl_show_group_2_totals = false if @composition.groups.size < 2

  # When no group 2 is selected, the values are group 1 (or no group) totals,
  # so we don't need to show separate totals
  @tbl_show_group_1_totals = false if @composition.groups.size < 2

  # No need for group 1 headers when no groups are selected
  @tbl_show_group_1_headers = false if @composition.groups.size == 0

  # If there are any values that have a NULL group 1, we should unknowns for
  # all group 2s
  @tbl_show_group_1_unknowns = false unless @composition.metrics.any? { |m| @composition.results.get_value(m, nil, false) }

  # If there are any values that have a NULL group 2, we should unknowns for
  # all group 1s
  @tbl_show_group_2_unknowns = false unless @composition.metrics.any? { |m| @composition.results.get_value(m, false, nil) }

  @expand_group_1_members = @group_1_unique_members || []
  @expand_group_1_members << nil if @tbl_show_group_1_unknowns

  @expand_group_2_members = @group_2_unique_members || []
  @expand_group_2_members << nil if @tbl_show_group_2_unknowns
%>

<table data-data-explorer--results-table-highlight-target="table">
  <colgroup>
    <%# Group 1 member labels %>
    <col>

    <%# Group 1 totals %>
    <% if @tbl_show_group_1_totals %>
      <col <%= html_attributes(span: @composition.metrics.size) %> class="totals">
    <% end %>

    <%# Group 2 members %>
    <% @group_2_unique_members&.each do |group_2_member| %>
      <col class="data" <%= html_attributes(span: @composition.metrics.size) %>>
    <% end %>

    <%# Group 2 nulls %>
    <col class="data" <%= html_attributes(span: @composition.metrics.size) %>>
  </colgroup>

  <thead>
    <%= render "data_explorer/dimensional/results/table/10_group_headers" if @tbl_show_group_2_headers %>

    <%= render "data_explorer/dimensional/results/table/20_metric_headers" if @tbl_show_metric_headers %>
  </thead>

  <tbody>
    <%= render "data_explorer/dimensional/results/table/30_overall_and_group_2_totals_row" if @tbl_show_metric_totals || @tbl_show_group_2_totals %>

    <%= render partial: "data_explorer/dimensional/results/table/40_group_row", collection: @expand_group_1_members, as: :group_1_member %>
  </tbody>
</table>
