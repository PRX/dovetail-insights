<table>
  <!-- Group 2 Headers -->
  <tr>
    <td>
      <%# If there's only one metric selected, we can shove the label for it %>
      <%# in this cell, so we don't have to show the second row. Otherwise, %>
      <%# leave this cell empty %>
      <% if @composition.metrics.size == 1 %>
        <%= @composition.metrics[0].metric %>
      <% end %>
    </td>

    <%# One cell for each metric, which are the headers for the group 1 %>
    <%# totals. This spans a number of cells equal to the number of selected %>
    <%# metrics. %>
    <td class="total" colspan="<%= @composition.metrics.size %>"><b>TOTAL</b></td>

    <%# One cell for each group 2 member, which span a number of cells equal %>
    <%# to the number of selected metrics %>
    <% @composition.results.group_2_unique_members.each do |member| %>
      <td
        colspan="<%= @composition.metrics.size %>"
        <%= html_attributes("data-raw-member": member) %>>
        <%= @composition.results.group_member_label(@composition.groups[1], member) %>
      </td>
    <% end %>

    <td colspan="<%= @composition.metrics.size %>"><i>UNKNOWN</i></td>
  </tr>

  <%# Row for metric headers. Only include this if there are more than one %>
  <%# selected metrics %>
  <% if @composition.metrics.size > 1 %>
    <!-- Metric Headers -->
    <tr>
      <td><%# Leave empty %></td>

      <!-- Headers for totals columns -->
      <% @composition.metrics.each do |metric| %>
        <td class="total"><%= metric.metric %></td>
      <% end %>

      <% @composition.results.group_2_unique_members.each do |_| %>
        <% @composition.metrics.each do |metric| %>
          <td><%= metric.metric %></td>
        <% end %>
      <% end %>

      <!-- Headers for unknowns columns -->
      <% @composition.metrics.each do |metric| %>
        <td><%= metric.metric %></td>
      <% end %>
    </tr>
  <% end %>

  <%# Row for metrics totals and group 2 totals %>
  <tr>
    <td class="total"><b>TOTAL</b></td>

    <!-- Totals for metrics -->
    <% @composition.metrics.each do |metric| %>
      <% total = @composition.results.get_total(metric) %>
      <td class="total"><%= number_with_delimiter total %></td>
    <% end %>

    <% @composition.results.group_2_unique_members.each do |member| %>
      <% @composition.metrics.each do |metric| %>
        <% total = @composition.results.get_total(metric, @composition.groups[1], member) %>
        <% min = @composition.results.get_min(metric, @composition.groups[1], member) %>
        <% max = @composition.results.get_max(metric, @composition.groups[1], member) %>
        <% range = max - min %>

        <td title="Min: <%= number_with_delimiter(min) %>&#013;Max: <%= number_with_delimiter(max) %>&#013;Range: <%= number_with_delimiter(range) %>" class="total"><%= number_with_delimiter total %></td>
      <% end %>
    <% end %>

    <!-- Totals for unknowns in group 2 -->
    <% @composition.metrics.each do |metric| %>
      <% total = @composition.results.get_total(metric, @composition.groups[1], nil) %>
      <td class="total"><%= number_with_delimiter total %></td>
    <% end %>
  </tr>

  <%# A row for each group member, with a cell for the member label and cells %>
  <%# for each metric value for that member %>
  <% @composition.results.group_1_unique_members.each do |member| %>
    <tr>
      <%# Group 1 member label %>
      <td
        <%= html_attributes("data-raw-member": member) %>>
        <%= @composition.results.group_member_label(@composition.groups[0], member) %>
      </td>

      <%# Totals for this member of group 1 (a total for each metric) %>
      <% @composition.metrics.each do |metric| %>
        <% total = @composition.results.get_total(metric, @composition.groups[0], member) %>
        <% min = @composition.results.get_min(metric, @composition.groups[0], member) %>
        <% max = @composition.results.get_max(metric, @composition.groups[0], member) %>
        <% range = max - min %>

        <td title="Min: <%= number_with_delimiter(min) %>&#013;Max: <%= number_with_delimiter(max) %>&#013;Range: <%= number_with_delimiter(range) %>" class="total"><%= number_with_delimiter total %></td>
      <% end %>

      <%# Group member metric vales %>
      <% @composition.results.group_2_unique_members.each do |member2| %>
        <% @composition.metrics.each do |metric| %>
          <% value = @composition.results.get_value(metric, member, member2) %>

          <td <%= html_attributes("data-raw-value": value) %>>
            <%= number_with_delimiter(value) %>
          </td>
        <% end %>
      <% end %>

      <%# For this group 1 member, metric values where group 2 is unknown %>
      <%# TODO Don't include this if there's an INCLUDE filter on group 1 %>
      <% @composition.metrics.each do |metric| %>
        <% value = @composition.results.get_value(metric, member, nil) %>

        <td class="unknown" <%= html_attributes("data-raw-value": value) %>>
          <%= number_with_delimiter(value) %>
        </td>
      <% end %>
    </tr>
  <% end %>

  <%# Row for group 1 unknowns and group1+group2 unknowns %>
  <tr>
    <td><i>UNKNOWN</i></td>

    <%# Totals for each metric where group 1 is unknown %>
    <% @composition.metrics.each do |metric| %>
      <% total = @composition.results.get_total(metric, @composition.groups[0], nil) %>
      <td class="total"><%= number_with_delimiter total %></td>
    <% end %>

    <%# Values for each metric in group 2 where group 1 is unknown %>
    <%# TODO Don't include this if there's an INCLUDE filter on group 2 %>
    <% @composition.results.group_2_unique_members.each do |member| %>
      <% @composition.metrics.each do |metric| %>
        <% value = @composition.results.get_value(metric, nil, member) %>

        <td class="unknown" <%= html_attributes("data-raw-value": value) %>>
          <%= number_with_delimiter(value) %>
        </td>
      <% end %>
    <% end %>

    <%# Values for each metric where both groups are unknown %>
    <%# TODO Don't include this if there's an INCLUDE filter on group 1 or group 2 %>
    <% @composition.metrics.each do |metric| %>
      <% value = @composition.results.get_value(metric, nil, nil) %>

      <td class="unknown" <%= html_attributes("data-raw-value": value) %>>
        <%= number_with_delimiter(value) %>
      </td>
    <% end %>
  </tr>
</table>
