/* Tooltips elements are injected by into an arbitrary place in the DOM, so
this style is treated as global, even though it's used only in this context */
.filter-chooser-operator-tooltip {
  line-height: 1.2;

  .tooltip-inner {
    padding: 8px 3px;
  }
}

/*  By default, these cards are hidden. They are only displayed once the filter
has been selected by the user. */
.filter-chooser.card {
  border-top: 4px solid var(--bs-cyan);
  border-bottom: 4px solid var(--bs-gray-400);
  display: none;
  border-radius: 4px;

  /* Once the filter is added by the user, the `filter-added` class is added
  to the card. */
  &.filter-added {
    display: block;
  }

  &.field_with_errors {
    border-top-color: var(--bs-danger);
  }

  select.field_with_errors,
  input.field_with_errors {
    border-color: var(--bs-danger);
  }

  legend {
    font-weight: bold;
    font-size: 1rem;
  }

  h3.card-title {
    font-size: 1rem;
    font-weight: 500;
  }

  select.form-select {
    font-size: 0.7rem;
    width: inherit;
    height: 1.9rem;
    border-radius: 2px;
    background-color: white;
    padding: 0 2.25rem 0 0.5rem;
  }

  /* Some filter cards have this nulls chooser. When available, it only shows
  up once the operator (include vs. exclude) has been chosen. The label of the
  checkbox changes to match the operator, so some elements are displayed
  conditionally. */
  .nulls-chooser {
    display: none;
    font-size: 0.86rem;
    padding: 0.5rem 0 0;
  }
  &:has(select.filter-operator option[value*="clude"]:checked) .nulls-chooser {
    display: block;
  }
  .nulls-chooser .include,
  .nulls-chooser .exclude {
    display: none;
  }
  &:has(select.filter-operator option[value="include"]:checked)
    .nulls-chooser
    .include {
    display: inline;
  }
  &:has(select.filter-operator option[value="exclude"]:checked)
    .nulls-chooser
    .exclude {
    display: inline;
  }

  &[data-dimension-type="Timestamp"] {
    .range,
    .extract,
    .truncate {
      display: none;
    }

    &:has(option[value="Range"]:checked) .range {
      display: block;
    }
    &:has(option[value="Extract"]:checked) .extract {
      display: block;
    }
    &:has(option[value="Truncate"]:checked) .truncate {
      display: block;
    }
  }
}
