# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default_sqlite: &default_sqlite
  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

default_pg: &default_pg
  adapter: postgresql
  encoding: unicode
  pool: <%= ENV.fetch("DATABASE_POOL_SIZE", 5) %>
  host: <%= ENV.fetch("POSTGRES_HOST", "127.0.0.1") %>
  port: <%= ENV.fetch("POSTGRES_PORT", "5432") %>
  database: <%= ENV.fetch("POSTGRES_DATABASE", "insights-db") %>
  username: <%= ENV.fetch("POSTGRES_USER", "insights-user") %>
  password: <%= ENV.fetch("POSTGRES_PASSWORD", "insights-pass") %>

development:
  <<: *default_sqlite
  database: storage/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default_sqlite
  database: storage/test.sqlite3

staging:
  primary:
    <<: *default_pg
  cache:
    <<: *default_pg
    migrations_paths: db/cache_migrate
  queue:
    <<: *default_pg
    migrations_paths: db/queue_migrate
  cable:
    <<: *default_pg
    migrations_paths: db/cable_migrate

production:
  primary:
    <<: *default_pg
  cache:
    <<: *default_pg
    migrations_paths: db/cache_migrate
  queue:
    <<: *default_pg
    migrations_paths: db/queue_migrate
  cable:
    <<: *default_pg
    migrations_paths: db/cable_migrate
