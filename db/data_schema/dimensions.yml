# Dimensions are aspects of the data that we think are meaningful in terms of
# filtering, grouping, etc.
#
# Each dimension has a type, and different types have different behaviors in
# the contexts of grouping, filtering, etc. Not all dimension make sense to
# filter or group using raw vales. For example, `publish date` dimension may
# have a type of `Timestamp`, indicating that the values for that dimension
# represent specific moments in time. Grouping data into infinitely small
# moments in time likely doesn't provide much value to a user. Grouping data
# into groups based on the month extracted from pub dates is more beneficial.
#
# So these dimensions do not strictly represent data that may be present in any
# particular database, but instead describe concepts that can be derived from
# the data available in various databases.
#
# The properties of each dimension, like Type, help the app determine how a
# user should be able to interact with each dimension.
Dimensions:
  podcast_id:
    Type: Token
    QueryKey: podcast
    ExhibitProperty: podcast_name
    StaticProperties:
      - podcast_name
    SummableMetrics:
      - downloads
      - impressions
    BigQuery:
      Selector: podcasts.id
      RequiredTables: [podcasts]
  episode_id:
    Type: Token
    QueryKey: episode
    # ExhibitProperty: episode_title_with_pubdate_prefix
    ExhibitProperty: episode_title
    StaticProperties:
      - podcast_id
      - podcast_name
      - episode_title
      # - episode_title_with_pubdate_prefix
      - episode_publish_timestamp
      - current_episode_age_in_seconds
      - season_number
      - episode_number
    SortProperties:
      - episode_publish_timestamp
    SummableMetrics:
      - downloads
      - impressions
    BigQuery:
      Selector: episodes.id
      Type: STRING
      RequiredTables: [episodes]
  download_timestamp:
    Type: Timestamp
    QueryKey: time
    SummableMetrics:
      - downloads
      - impressions
    BigQuery:
      Selector: downloads.timestamp
      Type: TIMESTAMP
      RequiredTables: [downloads]
  download_local_timestamp:
    Type: Timestamp
    QueryKey: localTime
    SummableMetrics:
      - downloads
      - impressions
    BigQuery:
      # Queries treat all timestamps as UTC values. In order to allow users to
      # deal with some timestamps in their local time zone, we use
      # FORMAT_TIMESTAMP with a time zone provided, which will output a string
      # with the date and time honoring the offset, but we override the time
      # zone represented in that string to be UTC. We then parse that string,
      # to end up with a new UTC timestamp, but where the date and time match
      # the wall clock date and time from the time zone associated with the
      # record.
      #
      # For example, a request made at midnight ET would be stored as a
      # timestamp like: 2025-01-01T04:00:00+00. This will convert value to
      # 2025-01-01T00:00:00+00, which is useful, even though it is factually
      # incorrect.
      Selector: PARSE_TIMESTAMP("%FT%T%z", FORMAT_TIMESTAMP("%FT%T+00", downloads.timestamp, COALESCE(cities.time_zone, countries.time_zone)), "UTC")
      Type: TIMESTAMP
      RequiredTables: [downloads, countries, cities]
  episode_publish_timestamp:
    Type: Timestamp
    QueryKey: published
    SummableMetrics:
      - downloads
      - impressions
    BigQuery:
      Selector: episodes.published_at
      Type: TIMESTAMP
      RequiredTables: [episodes]
  current_episode_age_in_seconds:
    Type: Duration
    QueryKey: age
    SummableMetrics:
      - downloads
      - impressions
    BigQuery:
      Selector: TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), episodes.published_at, SECOND)
      RequiredTables: [downloads, episodes]
  episode_age_at_download_in_seconds:
    Type: Duration
    QueryKey: lag
    SummableMetrics:
      - downloads
      - impressions
    BigQuery:
      Selector: TIMESTAMP_DIFF(downloads.timestamp, episodes.published_at, SECOND)
      RequiredTables: [downloads, episodes]
  season_number:
    Type: Token
    QueryKey: season
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: CAST(episodes.season_number AS STRING)
      Type: STRING
      RequiredTables: [episodes]
  episode_number:
    Type: Token
    QueryKey: episodeNumber
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: CAST(episodes.episode_number AS STRING)
      Type: STRING
      RequiredTables: [episodes]
  user_agent_id:
    Type: Token
    QueryKey: ua
    ExhibitProperty: user_agent_name
    StaticProperties:
      - user_agent_name
    PermitNulls: true
    SummableMetrics:
      - downloads
      - impressions
    BigQuery:
      Selector: user_agents.agentname_id
      Type: INTEGER
      RequiredTables: [user_agents]
  device_type_id:
    Type: Token
    QueryKey: device
    ExhibitProperty: device_type_name
    StaticProperties:
      - device_type_name
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: device_types.agentname_id
      Type: INTEGER
      RequiredTables: [device_types]
  os_id:
    Type: Token
    QueryKey: os
    ExhibitProperty: os_name
    StaticProperties:
      - os_name
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: operating_systems.agentname_id
      Type: INTEGER
      RequiredTables: [operating_systems]
  continent_code:
    Type: Token
    QueryKey: continent
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: countries.continent_code
      Type: STRING
      RequiredTables: [countries]
  country_id:
    Type: Token
    QueryKey: country
    ExhibitProperty: country_name
    StaticProperties:
      - country_name
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      # Selector: countries.geoname_id
      # Type: INTEGER
      Selector: countries.country_iso_code
      Type: STRING
      RequiredTables: [countries]
  subdivision_iso_code:
    Type: Token
    QueryKey: subdiv
    ExhibitProperty: subdivision_name
    StaticProperties:
      - subdivision_name
      - continent_code
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      # Selector: cities.subdivision_1_iso_code
      Selector: CONCAT(cities.country_iso_code, '-', cities.subdivision_1_iso_code)
      Type: STRING
      RequiredTables: [cities]
  city_id:
    Type: Token
    QueryKey: city
    ExhibitProperty: city_name_with_state_abbreviation
    StaticProperties:
      - continent_code
      - country_name
      - subdivision_iso_code
      - subdivision_name
      - city_name
      - city_name_with_state
      - city_name_with_state_abbreviation
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: cities.geoname_id
      RequiredTables: [cities]
  metro_id:
    Type: Token
    QueryKey: metro
    ExhibitProperty: metro_name
    StaticProperties:
      - metro_name
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: metros.code
      RequiredTables: [metros]
  time_zone:
    Type: Token
    QueryKey: tz
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: cities.time_zone
      RequiredTables: [cities]
  campaign_id:
    Type: Token
    QueryKey: campaign
    ExhibitProperty: campaign_name
    StaticProperties:
      - campaign_name
    SummableMetrics:
      - impressions
    BigQuery:
      Selector: campaigns.id
      RequiredTables: [campaigns]
  advertiser_id:
    Type: Token
    QueryKey: advertiser
    ExhibitProperty: advertiser_name
    StaticProperties:
      - advertiser_name
    SummableMetrics:
      - impressions
    BigQuery:
      Selector: advertisers.id
      RequiredTables: [advertisers]
  feed:
    Type: Token
    QueryKey: feed
    StaticProperties: []
    SummableMetrics:
      - downloads
      - impressions
    PermitNulls: true
    BigQuery:
      Selector: COALESCE(feeder_feed, "__DEFAULT_FEED__")
      RequiredColumns: [feeder_feed]
      Type: STRING
