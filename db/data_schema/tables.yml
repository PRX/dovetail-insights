Tables:
  dowloads: {}
  impressions:
    BigQuery:
      JoinsTo:
        downloads:
          # In the expression, use only schema table names; no BigQuery table names
          Expression: impressions.request_uuid = downloads.request_uuid AND TIMESTAMP_TRUNC(downloads.timestamp, DAY, "UTC") = TIMESTAMP_TRUNC(impressions.timestamp, DAY, "UTC")
          RequiredColumns:
            downloads: [request_uuid, timestamp]
            impressions: [request_uuid, timestamp]
      Join: LEFT
      Table: impressions_in_range
  podcasts:
    BigQuery:
      JoinsTo:
        downloads:
          Key: feeder_podcast
      Join: INNER
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.podcasts
      Key: id
  episodes:
    BigQuery:
      JoinsTo:
        downloads:
          Key: feeder_episode
      Join: INNER
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.episodes
      Key: id
  countries:
    BigQuery:
      JoinsTo:
        downloads:
          Key: country_geoname_id
      Join: LEFT
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.geonames
      Key: geoname_id
  cities:
    BigQuery:
      JoinsTo:
        downloads:
          Key: city_geoname_id
      Join: LEFT
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.geonames
      Key: geoname_id
  metros:
    BigQuery:
      JoinsTo:
        cities:
          Key: metro_code
      Join: LEFT
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.metronames
      Key: code
  user_agents:
    BigQuery:
      JoinsTo:
        downloads:
          Key: agent_name_id
      Join: LEFT
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.agentnames
      Key: agentname_id
  device_types:
    BigQuery:
      JoinsTo:
        downloads:
          Key: agent_type_id
      Join: LEFT
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.agentnames
      Key: agentname_id
  operating_systems:
    BigQuery:
      JoinsTo:
        downloads:
          Key: agent_os_id
      Join: LEFT
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.agentnames
      Key: agentname_id
  campaigns:
    BigQuery:
      JoinsTo:
        impressions:
          Key: campaign_id
      Join: LEFT
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.campaigns
      Key: id
  advertisers:
    BigQuery:
      JoinsTo:
        campaigns:
          Key: advertiser_id
      Join: LEFT
      Table: <%= ENV.fetch("BIGQUERY_DATASET", "staging") %>.advertisers
      Key: id
  episode_category:
    BigQuery:
      JoinsTo:
        episodes:
          RequiredColumns:
            episodes: [categories]
      Join: LEFT
      Table: UNNEST(episodes.categories)
